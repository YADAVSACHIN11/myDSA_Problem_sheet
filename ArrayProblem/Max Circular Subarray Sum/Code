class Solution {
  public:
    int circularSubarraySum(vector<int> &arr) {
    int maxSum = 0;
    int minSum = 0;
    int currMax = 0;
    int currMin = 0;
    int totalSum = 0;

    int n = arr.size();
    for (int i = 0; i < n; i++) {
        currMax = max(currMax + arr[i], arr[i]);
        maxSum = max(maxSum, currMax);

        currMin = min(currMin + arr[i], arr[i]);
        minSum = min(minSum, currMin);

        totalSum += arr[i];
    }
    int normSum = maxSum;
    int cirSum = totalSum - minSum;
    if (minSum == totalSum) {
        return normSum;
    }
    return max(normSum, cirSum);
}
};
